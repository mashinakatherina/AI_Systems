package LW3;

import LW3.impl.*;


import java.util.Collection;

import org.protege.owl.codegeneration.CodeGenerationFactory;
import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.FactoryHelper;
import org.protege.owl.codegeneration.impl.ProtegeJavaMapping;
import org.protege.owl.codegeneration.inference.CodeGenerationInference;
import org.protege.owl.codegeneration.inference.SimpleInference;

import org.semanticweb.owlapi.model.OWLClass;
import org.semanticweb.owlapi.model.OWLOntology;
import org.semanticweb.owlapi.model.OWLOntologyStorageException;

/**
 * A class that serves as the entry point to the generated code providing access
 * to existing individuals in the ontology and the ability to create new individuals in the ontology.<p>
 * 
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: MyFactory<br>
 * @version generated on Sun Oct 04 15:40:40 MSK 2020 by Katherina
 */
public class MyFactory implements CodeGenerationFactory {
    private OWLOntology ontology;
    private ProtegeJavaMapping javaMapping = new ProtegeJavaMapping();
    private FactoryHelper delegate;
    private CodeGenerationInference inference;

    public MyFactory(OWLOntology ontology) {
	    this(ontology, new SimpleInference(ontology));
    }
    
    public MyFactory(OWLOntology ontology, CodeGenerationInference inference) {
        this.ontology = ontology;
        this.inference = inference;
        javaMapping.initialize(ontology, inference);
        delegate = new FactoryHelper(ontology, inference);
    }

    public OWLOntology getOwlOntology() {
        return ontology;
    }
    
    public void saveOwlOntology() throws OWLOntologyStorageException {
        ontology.getOWLOntologyManager().saveOntology(ontology);
    }
    
    public void flushOwlReasoner() {
        delegate.flushOwlReasoner();
    }
    
    public boolean canAs(WrappedIndividual resource, Class<? extends WrappedIndividual> javaInterface) {
    	return javaMapping.canAs(resource, javaInterface);
    }
    
    public  <X extends WrappedIndividual> X as(WrappedIndividual resource, Class<? extends X> javaInterface) {
    	return javaMapping.as(resource, javaInterface);
    }
    
    public Class<?> getJavaInterfaceFromOwlClass(OWLClass cls) {
        return javaMapping.getJavaInterfaceFromOwlClass(cls);
    }
    
    public OWLClass getOwlClassFromJavaInterface(Class<?> javaInterface) {
	    return javaMapping.getOwlClassFromJavaInterface(javaInterface);
    }
    
    public CodeGenerationInference getInference() {
        return inference;
    }

    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A1_Knowledges_Alphabet
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A1_Knowledges_Alphabet", A1_Knowledges_Alphabet.class, DefaultA1_Knowledges_Alphabet.class);
    }

    /**
     * Creates an instance of type A1_Knowledges_Alphabet.  Modifies the underlying ontology.
     */
    public A1_Knowledges_Alphabet createA1_Knowledges_Alphabet(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_A1_KNOWLEDGES_ALPHABET, DefaultA1_Knowledges_Alphabet.class);
    }

    /**
     * Gets an instance of type A1_Knowledges_Alphabet with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public A1_Knowledges_Alphabet getA1_Knowledges_Alphabet(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_A1_KNOWLEDGES_ALPHABET, DefaultA1_Knowledges_Alphabet.class);
    }

    /**
     * Gets all instances of A1_Knowledges_Alphabet from the ontology.
     */
    public Collection<? extends A1_Knowledges_Alphabet> getAllA1_Knowledges_AlphabetInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_A1_KNOWLEDGES_ALPHABET, DefaultA1_Knowledges_Alphabet.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A1_Knowledges_Basics_of_terms
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A1_Knowledges_Basics_of_terms", A1_Knowledges_Basics_of_terms.class, DefaultA1_Knowledges_Basics_of_terms.class);
    }

    /**
     * Creates an instance of type A1_Knowledges_Basics_of_terms.  Modifies the underlying ontology.
     */
    public A1_Knowledges_Basics_of_terms createA1_Knowledges_Basics_of_terms(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_A1_KNOWLEDGES_BASICS_OF_TERMS, DefaultA1_Knowledges_Basics_of_terms.class);
    }

    /**
     * Gets an instance of type A1_Knowledges_Basics_of_terms with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public A1_Knowledges_Basics_of_terms getA1_Knowledges_Basics_of_terms(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_A1_KNOWLEDGES_BASICS_OF_TERMS, DefaultA1_Knowledges_Basics_of_terms.class);
    }

    /**
     * Gets all instances of A1_Knowledges_Basics_of_terms from the ontology.
     */
    public Collection<? extends A1_Knowledges_Basics_of_terms> getAllA1_Knowledges_Basics_of_termsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_A1_KNOWLEDGES_BASICS_OF_TERMS, DefaultA1_Knowledges_Basics_of_terms.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A1_Knowledges_Numbers
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A1_Knowledges_Numbers", A1_Knowledges_Numbers.class, DefaultA1_Knowledges_Numbers.class);
    }

    /**
     * Creates an instance of type A1_Knowledges_Numbers.  Modifies the underlying ontology.
     */
    public A1_Knowledges_Numbers createA1_Knowledges_Numbers(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_A1_KNOWLEDGES_NUMBERS, DefaultA1_Knowledges_Numbers.class);
    }

    /**
     * Gets an instance of type A1_Knowledges_Numbers with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public A1_Knowledges_Numbers getA1_Knowledges_Numbers(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_A1_KNOWLEDGES_NUMBERS, DefaultA1_Knowledges_Numbers.class);
    }

    /**
     * Gets all instances of A1_Knowledges_Numbers from the ontology.
     */
    public Collection<? extends A1_Knowledges_Numbers> getAllA1_Knowledges_NumbersInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_A1_KNOWLEDGES_NUMBERS, DefaultA1_Knowledges_Numbers.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A1_Skills_Ask_for_help
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A1_Skills_Ask_for_help", A1_Skills_Ask_for_help.class, DefaultA1_Skills_Ask_for_help.class);
    }

    /**
     * Creates an instance of type A1_Skills_Ask_for_help.  Modifies the underlying ontology.
     */
    public A1_Skills_Ask_for_help createA1_Skills_Ask_for_help(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_A1_SKILLS_ASK_FOR_HELP, DefaultA1_Skills_Ask_for_help.class);
    }

    /**
     * Gets an instance of type A1_Skills_Ask_for_help with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public A1_Skills_Ask_for_help getA1_Skills_Ask_for_help(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_A1_SKILLS_ASK_FOR_HELP, DefaultA1_Skills_Ask_for_help.class);
    }

    /**
     * Gets all instances of A1_Skills_Ask_for_help from the ontology.
     */
    public Collection<? extends A1_Skills_Ask_for_help> getAllA1_Skills_Ask_for_helpInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_A1_SKILLS_ASK_FOR_HELP, DefaultA1_Skills_Ask_for_help.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A1_Skills_Introduse_himself
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A1_Skills_Introduse_himself", A1_Skills_Introduse_himself.class, DefaultA1_Skills_Introduse_himself.class);
    }

    /**
     * Creates an instance of type A1_Skills_Introduse_himself.  Modifies the underlying ontology.
     */
    public A1_Skills_Introduse_himself createA1_Skills_Introduse_himself(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_A1_SKILLS_INTRODUSE_HIMSELF, DefaultA1_Skills_Introduse_himself.class);
    }

    /**
     * Gets an instance of type A1_Skills_Introduse_himself with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public A1_Skills_Introduse_himself getA1_Skills_Introduse_himself(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_A1_SKILLS_INTRODUSE_HIMSELF, DefaultA1_Skills_Introduse_himself.class);
    }

    /**
     * Gets all instances of A1_Skills_Introduse_himself from the ontology.
     */
    public Collection<? extends A1_Skills_Introduse_himself> getAllA1_Skills_Introduse_himselfInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_A1_SKILLS_INTRODUSE_HIMSELF, DefaultA1_Skills_Introduse_himself.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A1_Skills_Read_simple_words
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A1_Skills_Read_simple_words", A1_Skills_Read_simple_words.class, DefaultA1_Skills_Read_simple_words.class);
    }

    /**
     * Creates an instance of type A1_Skills_Read_simple_words.  Modifies the underlying ontology.
     */
    public A1_Skills_Read_simple_words createA1_Skills_Read_simple_words(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_A1_SKILLS_READ_SIMPLE_WORDS, DefaultA1_Skills_Read_simple_words.class);
    }

    /**
     * Gets an instance of type A1_Skills_Read_simple_words with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public A1_Skills_Read_simple_words getA1_Skills_Read_simple_words(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_A1_SKILLS_READ_SIMPLE_WORDS, DefaultA1_Skills_Read_simple_words.class);
    }

    /**
     * Gets all instances of A1_Skills_Read_simple_words from the ontology.
     */
    public Collection<? extends A1_Skills_Read_simple_words> getAllA1_Skills_Read_simple_wordsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_A1_SKILLS_READ_SIMPLE_WORDS, DefaultA1_Skills_Read_simple_words.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A1_Skills_Understand_simple_clear_speach
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A1_Skills_Understand_simple_clear_speach", A1_Skills_Understand_simple_clear_speach.class, DefaultA1_Skills_Understand_simple_clear_speach.class);
    }

    /**
     * Creates an instance of type A1_Skills_Understand_simple_clear_speach.  Modifies the underlying ontology.
     */
    public A1_Skills_Understand_simple_clear_speach createA1_Skills_Understand_simple_clear_speach(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_A1_SKILLS_UNDERSTAND_SIMPLE_CLEAR_SPEACH, DefaultA1_Skills_Understand_simple_clear_speach.class);
    }

    /**
     * Gets an instance of type A1_Skills_Understand_simple_clear_speach with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public A1_Skills_Understand_simple_clear_speach getA1_Skills_Understand_simple_clear_speach(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_A1_SKILLS_UNDERSTAND_SIMPLE_CLEAR_SPEACH, DefaultA1_Skills_Understand_simple_clear_speach.class);
    }

    /**
     * Gets all instances of A1_Skills_Understand_simple_clear_speach from the ontology.
     */
    public Collection<? extends A1_Skills_Understand_simple_clear_speach> getAllA1_Skills_Understand_simple_clear_speachInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_A1_SKILLS_UNDERSTAND_SIMPLE_CLEAR_SPEACH, DefaultA1_Skills_Understand_simple_clear_speach.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A1_Skills_Write_simple_words
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A1_Skills_Write_simple_words", A1_Skills_Write_simple_words.class, DefaultA1_Skills_Write_simple_words.class);
    }

    /**
     * Creates an instance of type A1_Skills_Write_simple_words.  Modifies the underlying ontology.
     */
    public A1_Skills_Write_simple_words createA1_Skills_Write_simple_words(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_A1_SKILLS_WRITE_SIMPLE_WORDS, DefaultA1_Skills_Write_simple_words.class);
    }

    /**
     * Gets an instance of type A1_Skills_Write_simple_words with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public A1_Skills_Write_simple_words getA1_Skills_Write_simple_words(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_A1_SKILLS_WRITE_SIMPLE_WORDS, DefaultA1_Skills_Write_simple_words.class);
    }

    /**
     * Gets all instances of A1_Skills_Write_simple_words from the ontology.
     */
    public Collection<? extends A1_Skills_Write_simple_words> getAllA1_Skills_Write_simple_wordsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_A1_SKILLS_WRITE_SIMPLE_WORDS, DefaultA1_Skills_Write_simple_words.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A2_Knowledges_Prepositions
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A2_Knowledges_Prepositions", A2_Knowledges_Prepositions.class, DefaultA2_Knowledges_Prepositions.class);
    }

    /**
     * Creates an instance of type A2_Knowledges_Prepositions.  Modifies the underlying ontology.
     */
    public A2_Knowledges_Prepositions createA2_Knowledges_Prepositions(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_A2_KNOWLEDGES_PREPOSITIONS, DefaultA2_Knowledges_Prepositions.class);
    }

    /**
     * Gets an instance of type A2_Knowledges_Prepositions with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public A2_Knowledges_Prepositions getA2_Knowledges_Prepositions(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_A2_KNOWLEDGES_PREPOSITIONS, DefaultA2_Knowledges_Prepositions.class);
    }

    /**
     * Gets all instances of A2_Knowledges_Prepositions from the ontology.
     */
    public Collection<? extends A2_Knowledges_Prepositions> getAllA2_Knowledges_PrepositionsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_A2_KNOWLEDGES_PREPOSITIONS, DefaultA2_Knowledges_Prepositions.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A2_Knowledges_Pronouns
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A2_Knowledges_Pronouns", A2_Knowledges_Pronouns.class, DefaultA2_Knowledges_Pronouns.class);
    }

    /**
     * Creates an instance of type A2_Knowledges_Pronouns.  Modifies the underlying ontology.
     */
    public A2_Knowledges_Pronouns createA2_Knowledges_Pronouns(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_A2_KNOWLEDGES_PRONOUNS, DefaultA2_Knowledges_Pronouns.class);
    }

    /**
     * Gets an instance of type A2_Knowledges_Pronouns with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public A2_Knowledges_Pronouns getA2_Knowledges_Pronouns(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_A2_KNOWLEDGES_PRONOUNS, DefaultA2_Knowledges_Pronouns.class);
    }

    /**
     * Gets all instances of A2_Knowledges_Pronouns from the ontology.
     */
    public Collection<? extends A2_Knowledges_Pronouns> getAllA2_Knowledges_PronounsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_A2_KNOWLEDGES_PRONOUNS, DefaultA2_Knowledges_Pronouns.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A2_Knowledges_Words_connected_to_everyday_speach
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A2_Knowledges_Words_connected_to_everyday_speach", A2_Knowledges_Words_connected_to_everyday_speach.class, DefaultA2_Knowledges_Words_connected_to_everyday_speach.class);
    }

    /**
     * Creates an instance of type A2_Knowledges_Words_connected_to_everyday_speach.  Modifies the underlying ontology.
     */
    public A2_Knowledges_Words_connected_to_everyday_speach createA2_Knowledges_Words_connected_to_everyday_speach(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_A2_KNOWLEDGES_WORDS_CONNECTED_TO_EVERYDAY_SPEACH, DefaultA2_Knowledges_Words_connected_to_everyday_speach.class);
    }

    /**
     * Gets an instance of type A2_Knowledges_Words_connected_to_everyday_speach with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public A2_Knowledges_Words_connected_to_everyday_speach getA2_Knowledges_Words_connected_to_everyday_speach(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_A2_KNOWLEDGES_WORDS_CONNECTED_TO_EVERYDAY_SPEACH, DefaultA2_Knowledges_Words_connected_to_everyday_speach.class);
    }

    /**
     * Gets all instances of A2_Knowledges_Words_connected_to_everyday_speach from the ontology.
     */
    public Collection<? extends A2_Knowledges_Words_connected_to_everyday_speach> getAllA2_Knowledges_Words_connected_to_everyday_speachInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_A2_KNOWLEDGES_WORDS_CONNECTED_TO_EVERYDAY_SPEACH, DefaultA2_Knowledges_Words_connected_to_everyday_speach.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A2_Skills_Communicate_in_simple_way
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A2_Skills_Communicate_in_simple_way", A2_Skills_Communicate_in_simple_way.class, DefaultA2_Skills_Communicate_in_simple_way.class);
    }

    /**
     * Creates an instance of type A2_Skills_Communicate_in_simple_way.  Modifies the underlying ontology.
     */
    public A2_Skills_Communicate_in_simple_way createA2_Skills_Communicate_in_simple_way(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_A2_SKILLS_COMMUNICATE_IN_SIMPLE_WAY, DefaultA2_Skills_Communicate_in_simple_way.class);
    }

    /**
     * Gets an instance of type A2_Skills_Communicate_in_simple_way with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public A2_Skills_Communicate_in_simple_way getA2_Skills_Communicate_in_simple_way(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_A2_SKILLS_COMMUNICATE_IN_SIMPLE_WAY, DefaultA2_Skills_Communicate_in_simple_way.class);
    }

    /**
     * Gets all instances of A2_Skills_Communicate_in_simple_way from the ontology.
     */
    public Collection<? extends A2_Skills_Communicate_in_simple_way> getAllA2_Skills_Communicate_in_simple_wayInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_A2_SKILLS_COMMUNICATE_IN_SIMPLE_WAY, DefaultA2_Skills_Communicate_in_simple_way.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A2_Skills_Describe_background_in_simple_terms
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A2_Skills_Describe_background_in_simple_terms", A2_Skills_Describe_background_in_simple_terms.class, DefaultA2_Skills_Describe_background_in_simple_terms.class);
    }

    /**
     * Creates an instance of type A2_Skills_Describe_background_in_simple_terms.  Modifies the underlying ontology.
     */
    public A2_Skills_Describe_background_in_simple_terms createA2_Skills_Describe_background_in_simple_terms(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_A2_SKILLS_DESCRIBE_BACKGROUND_IN_SIMPLE_TERMS, DefaultA2_Skills_Describe_background_in_simple_terms.class);
    }

    /**
     * Gets an instance of type A2_Skills_Describe_background_in_simple_terms with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public A2_Skills_Describe_background_in_simple_terms getA2_Skills_Describe_background_in_simple_terms(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_A2_SKILLS_DESCRIBE_BACKGROUND_IN_SIMPLE_TERMS, DefaultA2_Skills_Describe_background_in_simple_terms.class);
    }

    /**
     * Gets all instances of A2_Skills_Describe_background_in_simple_terms from the ontology.
     */
    public Collection<? extends A2_Skills_Describe_background_in_simple_terms> getAllA2_Skills_Describe_background_in_simple_termsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_A2_SKILLS_DESCRIBE_BACKGROUND_IN_SIMPLE_TERMS, DefaultA2_Skills_Describe_background_in_simple_terms.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A2_Skills_Understand_frequently_used_expressions
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A2_Skills_Understand_frequently_used_expressions", A2_Skills_Understand_frequently_used_expressions.class, DefaultA2_Skills_Understand_frequently_used_expressions.class);
    }

    /**
     * Creates an instance of type A2_Skills_Understand_frequently_used_expressions.  Modifies the underlying ontology.
     */
    public A2_Skills_Understand_frequently_used_expressions createA2_Skills_Understand_frequently_used_expressions(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_A2_SKILLS_UNDERSTAND_FREQUENTLY_USED_EXPRESSIONS, DefaultA2_Skills_Understand_frequently_used_expressions.class);
    }

    /**
     * Gets an instance of type A2_Skills_Understand_frequently_used_expressions with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public A2_Skills_Understand_frequently_used_expressions getA2_Skills_Understand_frequently_used_expressions(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_A2_SKILLS_UNDERSTAND_FREQUENTLY_USED_EXPRESSIONS, DefaultA2_Skills_Understand_frequently_used_expressions.class);
    }

    /**
     * Gets all instances of A2_Skills_Understand_frequently_used_expressions from the ontology.
     */
    public Collection<? extends A2_Skills_Understand_frequently_used_expressions> getAllA2_Skills_Understand_frequently_used_expressionsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_A2_SKILLS_UNDERSTAND_FREQUENTLY_USED_EXPRESSIONS, DefaultA2_Skills_Understand_frequently_used_expressions.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A2_Skills_Understand_sentences
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#A2_Skills_Understand_sentences", A2_Skills_Understand_sentences.class, DefaultA2_Skills_Understand_sentences.class);
    }

    /**
     * Creates an instance of type A2_Skills_Understand_sentences.  Modifies the underlying ontology.
     */
    public A2_Skills_Understand_sentences createA2_Skills_Understand_sentences(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_A2_SKILLS_UNDERSTAND_SENTENCES, DefaultA2_Skills_Understand_sentences.class);
    }

    /**
     * Gets an instance of type A2_Skills_Understand_sentences with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public A2_Skills_Understand_sentences getA2_Skills_Understand_sentences(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_A2_SKILLS_UNDERSTAND_SENTENCES, DefaultA2_Skills_Understand_sentences.class);
    }

    /**
     * Gets all instances of A2_Skills_Understand_sentences from the ontology.
     */
    public Collection<? extends A2_Skills_Understand_sentences> getAllA2_Skills_Understand_sentencesInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_A2_SKILLS_UNDERSTAND_SENTENCES, DefaultA2_Skills_Understand_sentences.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B1_Knowledges_Spelling
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B1_Knowledges_Spelling", B1_Knowledges_Spelling.class, DefaultB1_Knowledges_Spelling.class);
    }

    /**
     * Creates an instance of type B1_Knowledges_Spelling.  Modifies the underlying ontology.
     */
    public B1_Knowledges_Spelling createB1_Knowledges_Spelling(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_B1_KNOWLEDGES_SPELLING, DefaultB1_Knowledges_Spelling.class);
    }

    /**
     * Gets an instance of type B1_Knowledges_Spelling with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public B1_Knowledges_Spelling getB1_Knowledges_Spelling(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_B1_KNOWLEDGES_SPELLING, DefaultB1_Knowledges_Spelling.class);
    }

    /**
     * Gets all instances of B1_Knowledges_Spelling from the ontology.
     */
    public Collection<? extends B1_Knowledges_Spelling> getAllB1_Knowledges_SpellingInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_B1_KNOWLEDGES_SPELLING, DefaultB1_Knowledges_Spelling.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B1_Knowledges_Tenses
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B1_Knowledges_Tenses", B1_Knowledges_Tenses.class, DefaultB1_Knowledges_Tenses.class);
    }

    /**
     * Creates an instance of type B1_Knowledges_Tenses.  Modifies the underlying ontology.
     */
    public B1_Knowledges_Tenses createB1_Knowledges_Tenses(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_B1_KNOWLEDGES_TENSES, DefaultB1_Knowledges_Tenses.class);
    }

    /**
     * Gets an instance of type B1_Knowledges_Tenses with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public B1_Knowledges_Tenses getB1_Knowledges_Tenses(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_B1_KNOWLEDGES_TENSES, DefaultB1_Knowledges_Tenses.class);
    }

    /**
     * Gets all instances of B1_Knowledges_Tenses from the ontology.
     */
    public Collection<? extends B1_Knowledges_Tenses> getAllB1_Knowledges_TensesInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_B1_KNOWLEDGES_TENSES, DefaultB1_Knowledges_Tenses.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B1_Knowledges_Words_related_to_plans
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B1_Knowledges_Words_related_to_plans", B1_Knowledges_Words_related_to_plans.class, DefaultB1_Knowledges_Words_related_to_plans.class);
    }

    /**
     * Creates an instance of type B1_Knowledges_Words_related_to_plans.  Modifies the underlying ontology.
     */
    public B1_Knowledges_Words_related_to_plans createB1_Knowledges_Words_related_to_plans(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_B1_KNOWLEDGES_WORDS_RELATED_TO_PLANS, DefaultB1_Knowledges_Words_related_to_plans.class);
    }

    /**
     * Gets an instance of type B1_Knowledges_Words_related_to_plans with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public B1_Knowledges_Words_related_to_plans getB1_Knowledges_Words_related_to_plans(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_B1_KNOWLEDGES_WORDS_RELATED_TO_PLANS, DefaultB1_Knowledges_Words_related_to_plans.class);
    }

    /**
     * Gets all instances of B1_Knowledges_Words_related_to_plans from the ontology.
     */
    public Collection<? extends B1_Knowledges_Words_related_to_plans> getAllB1_Knowledges_Words_related_to_plansInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_B1_KNOWLEDGES_WORDS_RELATED_TO_PLANS, DefaultB1_Knowledges_Words_related_to_plans.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B1_Skills_Briefly_give_reasons_for_plans
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B1_Skills_Briefly_give_reasons_for_plans", B1_Skills_Briefly_give_reasons_for_plans.class, DefaultB1_Skills_Briefly_give_reasons_for_plans.class);
    }

    /**
     * Creates an instance of type B1_Skills_Briefly_give_reasons_for_plans.  Modifies the underlying ontology.
     */
    public B1_Skills_Briefly_give_reasons_for_plans createB1_Skills_Briefly_give_reasons_for_plans(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_B1_SKILLS_BRIEFLY_GIVE_REASONS_FOR_PLANS, DefaultB1_Skills_Briefly_give_reasons_for_plans.class);
    }

    /**
     * Gets an instance of type B1_Skills_Briefly_give_reasons_for_plans with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public B1_Skills_Briefly_give_reasons_for_plans getB1_Skills_Briefly_give_reasons_for_plans(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_B1_SKILLS_BRIEFLY_GIVE_REASONS_FOR_PLANS, DefaultB1_Skills_Briefly_give_reasons_for_plans.class);
    }

    /**
     * Gets all instances of B1_Skills_Briefly_give_reasons_for_plans from the ontology.
     */
    public Collection<? extends B1_Skills_Briefly_give_reasons_for_plans> getAllB1_Skills_Briefly_give_reasons_for_plansInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_B1_SKILLS_BRIEFLY_GIVE_REASONS_FOR_PLANS, DefaultB1_Skills_Briefly_give_reasons_for_plans.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B1_Skills_Deal_with_most_situations_where_language_needed
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B1_Skills_Deal_with_most_situations_where_language_needed", B1_Skills_Deal_with_most_situations_where_language_needed.class, DefaultB1_Skills_Deal_with_most_situations_where_language_needed.class);
    }

    /**
     * Creates an instance of type B1_Skills_Deal_with_most_situations_where_language_needed.  Modifies the underlying ontology.
     */
    public B1_Skills_Deal_with_most_situations_where_language_needed createB1_Skills_Deal_with_most_situations_where_language_needed(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_B1_SKILLS_DEAL_WITH_MOST_SITUATIONS_WHERE_LANGUAGE_NEEDED, DefaultB1_Skills_Deal_with_most_situations_where_language_needed.class);
    }

    /**
     * Gets an instance of type B1_Skills_Deal_with_most_situations_where_language_needed with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public B1_Skills_Deal_with_most_situations_where_language_needed getB1_Skills_Deal_with_most_situations_where_language_needed(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_B1_SKILLS_DEAL_WITH_MOST_SITUATIONS_WHERE_LANGUAGE_NEEDED, DefaultB1_Skills_Deal_with_most_situations_where_language_needed.class);
    }

    /**
     * Gets all instances of B1_Skills_Deal_with_most_situations_where_language_needed from the ontology.
     */
    public Collection<? extends B1_Skills_Deal_with_most_situations_where_language_needed> getAllB1_Skills_Deal_with_most_situations_where_language_neededInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_B1_SKILLS_DEAL_WITH_MOST_SITUATIONS_WHERE_LANGUAGE_NEEDED, DefaultB1_Skills_Deal_with_most_situations_where_language_needed.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B1_Skills_Describe_ambitions
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B1_Skills_Describe_ambitions", B1_Skills_Describe_ambitions.class, DefaultB1_Skills_Describe_ambitions.class);
    }

    /**
     * Creates an instance of type B1_Skills_Describe_ambitions.  Modifies the underlying ontology.
     */
    public B1_Skills_Describe_ambitions createB1_Skills_Describe_ambitions(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_B1_SKILLS_DESCRIBE_AMBITIONS, DefaultB1_Skills_Describe_ambitions.class);
    }

    /**
     * Gets an instance of type B1_Skills_Describe_ambitions with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public B1_Skills_Describe_ambitions getB1_Skills_Describe_ambitions(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_B1_SKILLS_DESCRIBE_AMBITIONS, DefaultB1_Skills_Describe_ambitions.class);
    }

    /**
     * Gets all instances of B1_Skills_Describe_ambitions from the ontology.
     */
    public Collection<? extends B1_Skills_Describe_ambitions> getAllB1_Skills_Describe_ambitionsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_B1_SKILLS_DESCRIBE_AMBITIONS, DefaultB1_Skills_Describe_ambitions.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B1_Skills_Describe_dreams
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B1_Skills_Describe_dreams", B1_Skills_Describe_dreams.class, DefaultB1_Skills_Describe_dreams.class);
    }

    /**
     * Creates an instance of type B1_Skills_Describe_dreams.  Modifies the underlying ontology.
     */
    public B1_Skills_Describe_dreams createB1_Skills_Describe_dreams(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_B1_SKILLS_DESCRIBE_DREAMS, DefaultB1_Skills_Describe_dreams.class);
    }

    /**
     * Gets an instance of type B1_Skills_Describe_dreams with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public B1_Skills_Describe_dreams getB1_Skills_Describe_dreams(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_B1_SKILLS_DESCRIBE_DREAMS, DefaultB1_Skills_Describe_dreams.class);
    }

    /**
     * Gets all instances of B1_Skills_Describe_dreams from the ontology.
     */
    public Collection<? extends B1_Skills_Describe_dreams> getAllB1_Skills_Describe_dreamsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_B1_SKILLS_DESCRIBE_DREAMS, DefaultB1_Skills_Describe_dreams.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B1_Skills_Describe_hopes
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B1_Skills_Describe_hopes", B1_Skills_Describe_hopes.class, DefaultB1_Skills_Describe_hopes.class);
    }

    /**
     * Creates an instance of type B1_Skills_Describe_hopes.  Modifies the underlying ontology.
     */
    public B1_Skills_Describe_hopes createB1_Skills_Describe_hopes(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_B1_SKILLS_DESCRIBE_HOPES, DefaultB1_Skills_Describe_hopes.class);
    }

    /**
     * Gets an instance of type B1_Skills_Describe_hopes with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public B1_Skills_Describe_hopes getB1_Skills_Describe_hopes(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_B1_SKILLS_DESCRIBE_HOPES, DefaultB1_Skills_Describe_hopes.class);
    }

    /**
     * Gets all instances of B1_Skills_Describe_hopes from the ontology.
     */
    public Collection<? extends B1_Skills_Describe_hopes> getAllB1_Skills_Describe_hopesInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_B1_SKILLS_DESCRIBE_HOPES, DefaultB1_Skills_Describe_hopes.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B1_Skills_Produce_simple_connected_text
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B1_Skills_Produce_simple_connected_text", B1_Skills_Produce_simple_connected_text.class, DefaultB1_Skills_Produce_simple_connected_text.class);
    }

    /**
     * Creates an instance of type B1_Skills_Produce_simple_connected_text.  Modifies the underlying ontology.
     */
    public B1_Skills_Produce_simple_connected_text createB1_Skills_Produce_simple_connected_text(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_B1_SKILLS_PRODUCE_SIMPLE_CONNECTED_TEXT, DefaultB1_Skills_Produce_simple_connected_text.class);
    }

    /**
     * Gets an instance of type B1_Skills_Produce_simple_connected_text with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public B1_Skills_Produce_simple_connected_text getB1_Skills_Produce_simple_connected_text(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_B1_SKILLS_PRODUCE_SIMPLE_CONNECTED_TEXT, DefaultB1_Skills_Produce_simple_connected_text.class);
    }

    /**
     * Gets all instances of B1_Skills_Produce_simple_connected_text from the ontology.
     */
    public Collection<? extends B1_Skills_Produce_simple_connected_text> getAllB1_Skills_Produce_simple_connected_textInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_B1_SKILLS_PRODUCE_SIMPLE_CONNECTED_TEXT, DefaultB1_Skills_Produce_simple_connected_text.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B1_Skills_Understand_main_points_of_clear_input
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B1_Skills_Understand_main_points_of_clear_input", B1_Skills_Understand_main_points_of_clear_input.class, DefaultB1_Skills_Understand_main_points_of_clear_input.class);
    }

    /**
     * Creates an instance of type B1_Skills_Understand_main_points_of_clear_input.  Modifies the underlying ontology.
     */
    public B1_Skills_Understand_main_points_of_clear_input createB1_Skills_Understand_main_points_of_clear_input(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_B1_SKILLS_UNDERSTAND_MAIN_POINTS_OF_CLEAR_INPUT, DefaultB1_Skills_Understand_main_points_of_clear_input.class);
    }

    /**
     * Gets an instance of type B1_Skills_Understand_main_points_of_clear_input with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public B1_Skills_Understand_main_points_of_clear_input getB1_Skills_Understand_main_points_of_clear_input(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_B1_SKILLS_UNDERSTAND_MAIN_POINTS_OF_CLEAR_INPUT, DefaultB1_Skills_Understand_main_points_of_clear_input.class);
    }

    /**
     * Gets all instances of B1_Skills_Understand_main_points_of_clear_input from the ontology.
     */
    public Collection<? extends B1_Skills_Understand_main_points_of_clear_input> getAllB1_Skills_Understand_main_points_of_clear_inputInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_B1_SKILLS_UNDERSTAND_MAIN_POINTS_OF_CLEAR_INPUT, DefaultB1_Skills_Understand_main_points_of_clear_input.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B2_Knowledges_Linkers
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B2_Knowledges_Linkers", B2_Knowledges_Linkers.class, DefaultB2_Knowledges_Linkers.class);
    }

    /**
     * Creates an instance of type B2_Knowledges_Linkers.  Modifies the underlying ontology.
     */
    public B2_Knowledges_Linkers createB2_Knowledges_Linkers(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_B2_KNOWLEDGES_LINKERS, DefaultB2_Knowledges_Linkers.class);
    }

    /**
     * Gets an instance of type B2_Knowledges_Linkers with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public B2_Knowledges_Linkers getB2_Knowledges_Linkers(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_B2_KNOWLEDGES_LINKERS, DefaultB2_Knowledges_Linkers.class);
    }

    /**
     * Gets all instances of B2_Knowledges_Linkers from the ontology.
     */
    public Collection<? extends B2_Knowledges_Linkers> getAllB2_Knowledges_LinkersInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_B2_KNOWLEDGES_LINKERS, DefaultB2_Knowledges_Linkers.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B2_Knowledges_Tecnical_words
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B2_Knowledges_Tecnical_words", B2_Knowledges_Tecnical_words.class, DefaultB2_Knowledges_Tecnical_words.class);
    }

    /**
     * Creates an instance of type B2_Knowledges_Tecnical_words.  Modifies the underlying ontology.
     */
    public B2_Knowledges_Tecnical_words createB2_Knowledges_Tecnical_words(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_B2_KNOWLEDGES_TECNICAL_WORDS, DefaultB2_Knowledges_Tecnical_words.class);
    }

    /**
     * Gets an instance of type B2_Knowledges_Tecnical_words with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public B2_Knowledges_Tecnical_words getB2_Knowledges_Tecnical_words(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_B2_KNOWLEDGES_TECNICAL_WORDS, DefaultB2_Knowledges_Tecnical_words.class);
    }

    /**
     * Gets all instances of B2_Knowledges_Tecnical_words from the ontology.
     */
    public Collection<? extends B2_Knowledges_Tecnical_words> getAllB2_Knowledges_Tecnical_wordsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_B2_KNOWLEDGES_TECNICAL_WORDS, DefaultB2_Knowledges_Tecnical_words.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B2_Knowledges_Text_structure
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B2_Knowledges_Text_structure", B2_Knowledges_Text_structure.class, DefaultB2_Knowledges_Text_structure.class);
    }

    /**
     * Creates an instance of type B2_Knowledges_Text_structure.  Modifies the underlying ontology.
     */
    public B2_Knowledges_Text_structure createB2_Knowledges_Text_structure(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_B2_KNOWLEDGES_TEXT_STRUCTURE, DefaultB2_Knowledges_Text_structure.class);
    }

    /**
     * Gets an instance of type B2_Knowledges_Text_structure with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public B2_Knowledges_Text_structure getB2_Knowledges_Text_structure(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_B2_KNOWLEDGES_TEXT_STRUCTURE, DefaultB2_Knowledges_Text_structure.class);
    }

    /**
     * Gets all instances of B2_Knowledges_Text_structure from the ontology.
     */
    public Collection<? extends B2_Knowledges_Text_structure> getAllB2_Knowledges_Text_structureInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_B2_KNOWLEDGES_TEXT_STRUCTURE, DefaultB2_Knowledges_Text_structure.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B2_Skills_Explain_a_viewpoint
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B2_Skills_Explain_a_viewpoint", B2_Skills_Explain_a_viewpoint.class, DefaultB2_Skills_Explain_a_viewpoint.class);
    }

    /**
     * Creates an instance of type B2_Skills_Explain_a_viewpoint.  Modifies the underlying ontology.
     */
    public B2_Skills_Explain_a_viewpoint createB2_Skills_Explain_a_viewpoint(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_B2_SKILLS_EXPLAIN_A_VIEWPOINT, DefaultB2_Skills_Explain_a_viewpoint.class);
    }

    /**
     * Gets an instance of type B2_Skills_Explain_a_viewpoint with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public B2_Skills_Explain_a_viewpoint getB2_Skills_Explain_a_viewpoint(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_B2_SKILLS_EXPLAIN_A_VIEWPOINT, DefaultB2_Skills_Explain_a_viewpoint.class);
    }

    /**
     * Gets all instances of B2_Skills_Explain_a_viewpoint from the ontology.
     */
    public Collection<? extends B2_Skills_Explain_a_viewpoint> getAllB2_Skills_Explain_a_viewpointInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_B2_SKILLS_EXPLAIN_A_VIEWPOINT, DefaultB2_Skills_Explain_a_viewpoint.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B2_Skills_Interact_spontaneusly
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B2_Skills_Interact_spontaneusly", B2_Skills_Interact_spontaneusly.class, DefaultB2_Skills_Interact_spontaneusly.class);
    }

    /**
     * Creates an instance of type B2_Skills_Interact_spontaneusly.  Modifies the underlying ontology.
     */
    public B2_Skills_Interact_spontaneusly createB2_Skills_Interact_spontaneusly(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_B2_SKILLS_INTERACT_SPONTANEUSLY, DefaultB2_Skills_Interact_spontaneusly.class);
    }

    /**
     * Gets an instance of type B2_Skills_Interact_spontaneusly with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public B2_Skills_Interact_spontaneusly getB2_Skills_Interact_spontaneusly(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_B2_SKILLS_INTERACT_SPONTANEUSLY, DefaultB2_Skills_Interact_spontaneusly.class);
    }

    /**
     * Gets all instances of B2_Skills_Interact_spontaneusly from the ontology.
     */
    public Collection<? extends B2_Skills_Interact_spontaneusly> getAllB2_Skills_Interact_spontaneuslyInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_B2_SKILLS_INTERACT_SPONTANEUSLY, DefaultB2_Skills_Interact_spontaneusly.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B2_Skills_Lead_technical_discussions
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B2_Skills_Lead_technical_discussions", B2_Skills_Lead_technical_discussions.class, DefaultB2_Skills_Lead_technical_discussions.class);
    }

    /**
     * Creates an instance of type B2_Skills_Lead_technical_discussions.  Modifies the underlying ontology.
     */
    public B2_Skills_Lead_technical_discussions createB2_Skills_Lead_technical_discussions(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_B2_SKILLS_LEAD_TECHNICAL_DISCUSSIONS, DefaultB2_Skills_Lead_technical_discussions.class);
    }

    /**
     * Gets an instance of type B2_Skills_Lead_technical_discussions with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public B2_Skills_Lead_technical_discussions getB2_Skills_Lead_technical_discussions(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_B2_SKILLS_LEAD_TECHNICAL_DISCUSSIONS, DefaultB2_Skills_Lead_technical_discussions.class);
    }

    /**
     * Gets all instances of B2_Skills_Lead_technical_discussions from the ontology.
     */
    public Collection<? extends B2_Skills_Lead_technical_discussions> getAllB2_Skills_Lead_technical_discussionsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_B2_SKILLS_LEAD_TECHNICAL_DISCUSSIONS, DefaultB2_Skills_Lead_technical_discussions.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B2_Skills_Produce_clear_detailed_text
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B2_Skills_Produce_clear_detailed_text", B2_Skills_Produce_clear_detailed_text.class, DefaultB2_Skills_Produce_clear_detailed_text.class);
    }

    /**
     * Creates an instance of type B2_Skills_Produce_clear_detailed_text.  Modifies the underlying ontology.
     */
    public B2_Skills_Produce_clear_detailed_text createB2_Skills_Produce_clear_detailed_text(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_B2_SKILLS_PRODUCE_CLEAR_DETAILED_TEXT, DefaultB2_Skills_Produce_clear_detailed_text.class);
    }

    /**
     * Gets an instance of type B2_Skills_Produce_clear_detailed_text with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public B2_Skills_Produce_clear_detailed_text getB2_Skills_Produce_clear_detailed_text(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_B2_SKILLS_PRODUCE_CLEAR_DETAILED_TEXT, DefaultB2_Skills_Produce_clear_detailed_text.class);
    }

    /**
     * Gets all instances of B2_Skills_Produce_clear_detailed_text from the ontology.
     */
    public Collection<? extends B2_Skills_Produce_clear_detailed_text> getAllB2_Skills_Produce_clear_detailed_textInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_B2_SKILLS_PRODUCE_CLEAR_DETAILED_TEXT, DefaultB2_Skills_Produce_clear_detailed_text.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B2_Skills_Understand_the_main_ideas_of_complex_text
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#B2_Skills_Understand_the_main_ideas_of_complex_text", B2_Skills_Understand_the_main_ideas_of_complex_text.class, DefaultB2_Skills_Understand_the_main_ideas_of_complex_text.class);
    }

    /**
     * Creates an instance of type B2_Skills_Understand_the_main_ideas_of_complex_text.  Modifies the underlying ontology.
     */
    public B2_Skills_Understand_the_main_ideas_of_complex_text createB2_Skills_Understand_the_main_ideas_of_complex_text(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_B2_SKILLS_UNDERSTAND_THE_MAIN_IDEAS_OF_COMPLEX_TEXT, DefaultB2_Skills_Understand_the_main_ideas_of_complex_text.class);
    }

    /**
     * Gets an instance of type B2_Skills_Understand_the_main_ideas_of_complex_text with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public B2_Skills_Understand_the_main_ideas_of_complex_text getB2_Skills_Understand_the_main_ideas_of_complex_text(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_B2_SKILLS_UNDERSTAND_THE_MAIN_IDEAS_OF_COMPLEX_TEXT, DefaultB2_Skills_Understand_the_main_ideas_of_complex_text.class);
    }

    /**
     * Gets all instances of B2_Skills_Understand_the_main_ideas_of_complex_text from the ontology.
     */
    public Collection<? extends B2_Skills_Understand_the_main_ideas_of_complex_text> getAllB2_Skills_Understand_the_main_ideas_of_complex_textInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_B2_SKILLS_UNDERSTAND_THE_MAIN_IDEAS_OF_COMPLEX_TEXT, DefaultB2_Skills_Understand_the_main_ideas_of_complex_text.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C1_Knowledges_Abbreviations
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C1_Knowledges_Abbreviations", C1_Knowledges_Abbreviations.class, DefaultC1_Knowledges_Abbreviations.class);
    }

    /**
     * Creates an instance of type C1_Knowledges_Abbreviations.  Modifies the underlying ontology.
     */
    public C1_Knowledges_Abbreviations createC1_Knowledges_Abbreviations(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_C1_KNOWLEDGES_ABBREVIATIONS, DefaultC1_Knowledges_Abbreviations.class);
    }

    /**
     * Gets an instance of type C1_Knowledges_Abbreviations with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public C1_Knowledges_Abbreviations getC1_Knowledges_Abbreviations(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_C1_KNOWLEDGES_ABBREVIATIONS, DefaultC1_Knowledges_Abbreviations.class);
    }

    /**
     * Gets all instances of C1_Knowledges_Abbreviations from the ontology.
     */
    public Collection<? extends C1_Knowledges_Abbreviations> getAllC1_Knowledges_AbbreviationsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_C1_KNOWLEDGES_ABBREVIATIONS, DefaultC1_Knowledges_Abbreviations.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C1_Knowledges_Finer_shades_of_words
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C1_Knowledges_Finer_shades_of_words", C1_Knowledges_Finer_shades_of_words.class, DefaultC1_Knowledges_Finer_shades_of_words.class);
    }

    /**
     * Creates an instance of type C1_Knowledges_Finer_shades_of_words.  Modifies the underlying ontology.
     */
    public C1_Knowledges_Finer_shades_of_words createC1_Knowledges_Finer_shades_of_words(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_C1_KNOWLEDGES_FINER_SHADES_OF_WORDS, DefaultC1_Knowledges_Finer_shades_of_words.class);
    }

    /**
     * Gets an instance of type C1_Knowledges_Finer_shades_of_words with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public C1_Knowledges_Finer_shades_of_words getC1_Knowledges_Finer_shades_of_words(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_C1_KNOWLEDGES_FINER_SHADES_OF_WORDS, DefaultC1_Knowledges_Finer_shades_of_words.class);
    }

    /**
     * Gets all instances of C1_Knowledges_Finer_shades_of_words from the ontology.
     */
    public Collection<? extends C1_Knowledges_Finer_shades_of_words> getAllC1_Knowledges_Finer_shades_of_wordsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_C1_KNOWLEDGES_FINER_SHADES_OF_WORDS, DefaultC1_Knowledges_Finer_shades_of_words.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C1_Knowledges_Sarcasm
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C1_Knowledges_Sarcasm", C1_Knowledges_Sarcasm.class, DefaultC1_Knowledges_Sarcasm.class);
    }

    /**
     * Creates an instance of type C1_Knowledges_Sarcasm.  Modifies the underlying ontology.
     */
    public C1_Knowledges_Sarcasm createC1_Knowledges_Sarcasm(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_C1_KNOWLEDGES_SARCASM, DefaultC1_Knowledges_Sarcasm.class);
    }

    /**
     * Gets an instance of type C1_Knowledges_Sarcasm with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public C1_Knowledges_Sarcasm getC1_Knowledges_Sarcasm(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_C1_KNOWLEDGES_SARCASM, DefaultC1_Knowledges_Sarcasm.class);
    }

    /**
     * Gets all instances of C1_Knowledges_Sarcasm from the ontology.
     */
    public Collection<? extends C1_Knowledges_Sarcasm> getAllC1_Knowledges_SarcasmInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_C1_KNOWLEDGES_SARCASM, DefaultC1_Knowledges_Sarcasm.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C1_Skills_Express_himself_fluently_and_spontaneously
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C1_Skills_Express_himself_fluently_and_spontaneously", C1_Skills_Express_himself_fluently_and_spontaneously.class, DefaultC1_Skills_Express_himself_fluently_and_spontaneously.class);
    }

    /**
     * Creates an instance of type C1_Skills_Express_himself_fluently_and_spontaneously.  Modifies the underlying ontology.
     */
    public C1_Skills_Express_himself_fluently_and_spontaneously createC1_Skills_Express_himself_fluently_and_spontaneously(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_C1_SKILLS_EXPRESS_HIMSELF_FLUENTLY_AND_SPONTANEOUSLY, DefaultC1_Skills_Express_himself_fluently_and_spontaneously.class);
    }

    /**
     * Gets an instance of type C1_Skills_Express_himself_fluently_and_spontaneously with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public C1_Skills_Express_himself_fluently_and_spontaneously getC1_Skills_Express_himself_fluently_and_spontaneously(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_C1_SKILLS_EXPRESS_HIMSELF_FLUENTLY_AND_SPONTANEOUSLY, DefaultC1_Skills_Express_himself_fluently_and_spontaneously.class);
    }

    /**
     * Gets all instances of C1_Skills_Express_himself_fluently_and_spontaneously from the ontology.
     */
    public Collection<? extends C1_Skills_Express_himself_fluently_and_spontaneously> getAllC1_Skills_Express_himself_fluently_and_spontaneouslyInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_C1_SKILLS_EXPRESS_HIMSELF_FLUENTLY_AND_SPONTANEOUSLY, DefaultC1_Skills_Express_himself_fluently_and_spontaneously.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C1_Skills_Produce_clear_wellstructured_text
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C1_Skills_Produce_clear_wellstructured_text", C1_Skills_Produce_clear_wellstructured_text.class, DefaultC1_Skills_Produce_clear_wellstructured_text.class);
    }

    /**
     * Creates an instance of type C1_Skills_Produce_clear_wellstructured_text.  Modifies the underlying ontology.
     */
    public C1_Skills_Produce_clear_wellstructured_text createC1_Skills_Produce_clear_wellstructured_text(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_C1_SKILLS_PRODUCE_CLEAR_WELLSTRUCTURED_TEXT, DefaultC1_Skills_Produce_clear_wellstructured_text.class);
    }

    /**
     * Gets an instance of type C1_Skills_Produce_clear_wellstructured_text with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public C1_Skills_Produce_clear_wellstructured_text getC1_Skills_Produce_clear_wellstructured_text(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_C1_SKILLS_PRODUCE_CLEAR_WELLSTRUCTURED_TEXT, DefaultC1_Skills_Produce_clear_wellstructured_text.class);
    }

    /**
     * Gets all instances of C1_Skills_Produce_clear_wellstructured_text from the ontology.
     */
    public Collection<? extends C1_Skills_Produce_clear_wellstructured_text> getAllC1_Skills_Produce_clear_wellstructured_textInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_C1_SKILLS_PRODUCE_CLEAR_WELLSTRUCTURED_TEXT, DefaultC1_Skills_Produce_clear_wellstructured_text.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C1_Skills_Recognise_implicit_meaning
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C1_Skills_Recognise_implicit_meaning", C1_Skills_Recognise_implicit_meaning.class, DefaultC1_Skills_Recognise_implicit_meaning.class);
    }

    /**
     * Creates an instance of type C1_Skills_Recognise_implicit_meaning.  Modifies the underlying ontology.
     */
    public C1_Skills_Recognise_implicit_meaning createC1_Skills_Recognise_implicit_meaning(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_C1_SKILLS_RECOGNISE_IMPLICIT_MEANING, DefaultC1_Skills_Recognise_implicit_meaning.class);
    }

    /**
     * Gets an instance of type C1_Skills_Recognise_implicit_meaning with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public C1_Skills_Recognise_implicit_meaning getC1_Skills_Recognise_implicit_meaning(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_C1_SKILLS_RECOGNISE_IMPLICIT_MEANING, DefaultC1_Skills_Recognise_implicit_meaning.class);
    }

    /**
     * Gets all instances of C1_Skills_Recognise_implicit_meaning from the ontology.
     */
    public Collection<? extends C1_Skills_Recognise_implicit_meaning> getAllC1_Skills_Recognise_implicit_meaningInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_C1_SKILLS_RECOGNISE_IMPLICIT_MEANING, DefaultC1_Skills_Recognise_implicit_meaning.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C1_Skills_Understand_a_wide_range_of_demanding
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C1_Skills_Understand_a_wide_range_of_demanding", C1_Skills_Understand_a_wide_range_of_demanding.class, DefaultC1_Skills_Understand_a_wide_range_of_demanding.class);
    }

    /**
     * Creates an instance of type C1_Skills_Understand_a_wide_range_of_demanding.  Modifies the underlying ontology.
     */
    public C1_Skills_Understand_a_wide_range_of_demanding createC1_Skills_Understand_a_wide_range_of_demanding(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_C1_SKILLS_UNDERSTAND_A_WIDE_RANGE_OF_DEMANDING, DefaultC1_Skills_Understand_a_wide_range_of_demanding.class);
    }

    /**
     * Gets an instance of type C1_Skills_Understand_a_wide_range_of_demanding with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public C1_Skills_Understand_a_wide_range_of_demanding getC1_Skills_Understand_a_wide_range_of_demanding(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_C1_SKILLS_UNDERSTAND_A_WIDE_RANGE_OF_DEMANDING, DefaultC1_Skills_Understand_a_wide_range_of_demanding.class);
    }

    /**
     * Gets all instances of C1_Skills_Understand_a_wide_range_of_demanding from the ontology.
     */
    public Collection<? extends C1_Skills_Understand_a_wide_range_of_demanding> getAllC1_Skills_Understand_a_wide_range_of_demandingInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_C1_SKILLS_UNDERSTAND_A_WIDE_RANGE_OF_DEMANDING, DefaultC1_Skills_Understand_a_wide_range_of_demanding.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C1_Skills_Use_language_flexibly
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C1_Skills_Use_language_flexibly", C1_Skills_Use_language_flexibly.class, DefaultC1_Skills_Use_language_flexibly.class);
    }

    /**
     * Creates an instance of type C1_Skills_Use_language_flexibly.  Modifies the underlying ontology.
     */
    public C1_Skills_Use_language_flexibly createC1_Skills_Use_language_flexibly(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_C1_SKILLS_USE_LANGUAGE_FLEXIBLY, DefaultC1_Skills_Use_language_flexibly.class);
    }

    /**
     * Gets an instance of type C1_Skills_Use_language_flexibly with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public C1_Skills_Use_language_flexibly getC1_Skills_Use_language_flexibly(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_C1_SKILLS_USE_LANGUAGE_FLEXIBLY, DefaultC1_Skills_Use_language_flexibly.class);
    }

    /**
     * Gets all instances of C1_Skills_Use_language_flexibly from the ontology.
     */
    public Collection<? extends C1_Skills_Use_language_flexibly> getAllC1_Skills_Use_language_flexiblyInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_C1_SKILLS_USE_LANGUAGE_FLEXIBLY, DefaultC1_Skills_Use_language_flexibly.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C2_Knowledges_All_tenses
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C2_Knowledges_All_tenses", C2_Knowledges_All_tenses.class, DefaultC2_Knowledges_All_tenses.class);
    }

    /**
     * Creates an instance of type C2_Knowledges_All_tenses.  Modifies the underlying ontology.
     */
    public C2_Knowledges_All_tenses createC2_Knowledges_All_tenses(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_C2_KNOWLEDGES_ALL_TENSES, DefaultC2_Knowledges_All_tenses.class);
    }

    /**
     * Gets an instance of type C2_Knowledges_All_tenses with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public C2_Knowledges_All_tenses getC2_Knowledges_All_tenses(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_C2_KNOWLEDGES_ALL_TENSES, DefaultC2_Knowledges_All_tenses.class);
    }

    /**
     * Gets all instances of C2_Knowledges_All_tenses from the ontology.
     */
    public Collection<? extends C2_Knowledges_All_tenses> getAllC2_Knowledges_All_tensesInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_C2_KNOWLEDGES_ALL_TENSES, DefaultC2_Knowledges_All_tenses.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C2_Knowledges_All_vocabulary
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C2_Knowledges_All_vocabulary", C2_Knowledges_All_vocabulary.class, DefaultC2_Knowledges_All_vocabulary.class);
    }

    /**
     * Creates an instance of type C2_Knowledges_All_vocabulary.  Modifies the underlying ontology.
     */
    public C2_Knowledges_All_vocabulary createC2_Knowledges_All_vocabulary(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_C2_KNOWLEDGES_ALL_VOCABULARY, DefaultC2_Knowledges_All_vocabulary.class);
    }

    /**
     * Gets an instance of type C2_Knowledges_All_vocabulary with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public C2_Knowledges_All_vocabulary getC2_Knowledges_All_vocabulary(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_C2_KNOWLEDGES_ALL_VOCABULARY, DefaultC2_Knowledges_All_vocabulary.class);
    }

    /**
     * Gets all instances of C2_Knowledges_All_vocabulary from the ontology.
     */
    public Collection<? extends C2_Knowledges_All_vocabulary> getAllC2_Knowledges_All_vocabularyInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_C2_KNOWLEDGES_ALL_VOCABULARY, DefaultC2_Knowledges_All_vocabulary.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C2_Skills_Differentiating_finer_shades_of_meaning
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C2_Skills_Differentiating_finer_shades_of_meaning", C2_Skills_Differentiating_finer_shades_of_meaning.class, DefaultC2_Skills_Differentiating_finer_shades_of_meaning.class);
    }

    /**
     * Creates an instance of type C2_Skills_Differentiating_finer_shades_of_meaning.  Modifies the underlying ontology.
     */
    public C2_Skills_Differentiating_finer_shades_of_meaning createC2_Skills_Differentiating_finer_shades_of_meaning(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_C2_SKILLS_DIFFERENTIATING_FINER_SHADES_OF_MEANING, DefaultC2_Skills_Differentiating_finer_shades_of_meaning.class);
    }

    /**
     * Gets an instance of type C2_Skills_Differentiating_finer_shades_of_meaning with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public C2_Skills_Differentiating_finer_shades_of_meaning getC2_Skills_Differentiating_finer_shades_of_meaning(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_C2_SKILLS_DIFFERENTIATING_FINER_SHADES_OF_MEANING, DefaultC2_Skills_Differentiating_finer_shades_of_meaning.class);
    }

    /**
     * Gets all instances of C2_Skills_Differentiating_finer_shades_of_meaning from the ontology.
     */
    public Collection<? extends C2_Skills_Differentiating_finer_shades_of_meaning> getAllC2_Skills_Differentiating_finer_shades_of_meaningInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_C2_SKILLS_DIFFERENTIATING_FINER_SHADES_OF_MEANING, DefaultC2_Skills_Differentiating_finer_shades_of_meaning.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C2_Skills_Read_all_texts
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C2_Skills_Read_all_texts", C2_Skills_Read_all_texts.class, DefaultC2_Skills_Read_all_texts.class);
    }

    /**
     * Creates an instance of type C2_Skills_Read_all_texts.  Modifies the underlying ontology.
     */
    public C2_Skills_Read_all_texts createC2_Skills_Read_all_texts(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_C2_SKILLS_READ_ALL_TEXTS, DefaultC2_Skills_Read_all_texts.class);
    }

    /**
     * Gets an instance of type C2_Skills_Read_all_texts with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public C2_Skills_Read_all_texts getC2_Skills_Read_all_texts(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_C2_SKILLS_READ_ALL_TEXTS, DefaultC2_Skills_Read_all_texts.class);
    }

    /**
     * Gets all instances of C2_Skills_Read_all_texts from the ontology.
     */
    public Collection<? extends C2_Skills_Read_all_texts> getAllC2_Skills_Read_all_textsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_C2_SKILLS_READ_ALL_TEXTS, DefaultC2_Skills_Read_all_texts.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C2_Skills_Reconstruct_arguments
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C2_Skills_Reconstruct_arguments", C2_Skills_Reconstruct_arguments.class, DefaultC2_Skills_Reconstruct_arguments.class);
    }

    /**
     * Creates an instance of type C2_Skills_Reconstruct_arguments.  Modifies the underlying ontology.
     */
    public C2_Skills_Reconstruct_arguments createC2_Skills_Reconstruct_arguments(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_C2_SKILLS_RECONSTRUCT_ARGUMENTS, DefaultC2_Skills_Reconstruct_arguments.class);
    }

    /**
     * Gets an instance of type C2_Skills_Reconstruct_arguments with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public C2_Skills_Reconstruct_arguments getC2_Skills_Reconstruct_arguments(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_C2_SKILLS_RECONSTRUCT_ARGUMENTS, DefaultC2_Skills_Reconstruct_arguments.class);
    }

    /**
     * Gets all instances of C2_Skills_Reconstruct_arguments from the ontology.
     */
    public Collection<? extends C2_Skills_Reconstruct_arguments> getAllC2_Skills_Reconstruct_argumentsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_C2_SKILLS_RECONSTRUCT_ARGUMENTS, DefaultC2_Skills_Reconstruct_arguments.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C2_Skills_Summarise_information
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C2_Skills_Summarise_information", C2_Skills_Summarise_information.class, DefaultC2_Skills_Summarise_information.class);
    }

    /**
     * Creates an instance of type C2_Skills_Summarise_information.  Modifies the underlying ontology.
     */
    public C2_Skills_Summarise_information createC2_Skills_Summarise_information(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_C2_SKILLS_SUMMARISE_INFORMATION, DefaultC2_Skills_Summarise_information.class);
    }

    /**
     * Gets an instance of type C2_Skills_Summarise_information with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public C2_Skills_Summarise_information getC2_Skills_Summarise_information(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_C2_SKILLS_SUMMARISE_INFORMATION, DefaultC2_Skills_Summarise_information.class);
    }

    /**
     * Gets all instances of C2_Skills_Summarise_information from the ontology.
     */
    public Collection<? extends C2_Skills_Summarise_information> getAllC2_Skills_Summarise_informationInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_C2_SKILLS_SUMMARISE_INFORMATION, DefaultC2_Skills_Summarise_information.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C2_Skills_Write_everything
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#C2_Skills_Write_everything", C2_Skills_Write_everything.class, DefaultC2_Skills_Write_everything.class);
    }

    /**
     * Creates an instance of type C2_Skills_Write_everything.  Modifies the underlying ontology.
     */
    public C2_Skills_Write_everything createC2_Skills_Write_everything(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_C2_SKILLS_WRITE_EVERYTHING, DefaultC2_Skills_Write_everything.class);
    }

    /**
     * Gets an instance of type C2_Skills_Write_everything with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public C2_Skills_Write_everything getC2_Skills_Write_everything(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_C2_SKILLS_WRITE_EVERYTHING, DefaultC2_Skills_Write_everything.class);
    }

    /**
     * Gets all instances of C2_Skills_Write_everything from the ontology.
     */
    public Collection<? extends C2_Skills_Write_everything> getAllC2_Skills_Write_everythingInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_C2_SKILLS_WRITE_EVERYTHING, DefaultC2_Skills_Write_everything.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#Knowledges
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#Knowledges", Knowledges.class, DefaultKnowledges.class);
    }

    /**
     * Creates an instance of type Knowledges.  Modifies the underlying ontology.
     */
    public Knowledges createKnowledges(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_KNOWLEDGES, DefaultKnowledges.class);
    }

    /**
     * Gets an instance of type Knowledges with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Knowledges getKnowledges(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_KNOWLEDGES, DefaultKnowledges.class);
    }

    /**
     * Gets all instances of Knowledges from the ontology.
     */
    public Collection<? extends Knowledges> getAllKnowledgesInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_KNOWLEDGES, DefaultKnowledges.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#Language_levels
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#Language_levels", Language_levels.class, DefaultLanguage_levels.class);
    }

    /**
     * Creates an instance of type Language_levels.  Modifies the underlying ontology.
     */
    public Language_levels createLanguage_levels(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_LANGUAGE_LEVELS, DefaultLanguage_levels.class);
    }

    /**
     * Gets an instance of type Language_levels with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Language_levels getLanguage_levels(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_LANGUAGE_LEVELS, DefaultLanguage_levels.class);
    }

    /**
     * Gets all instances of Language_levels from the ontology.
     */
    public Collection<? extends Language_levels> getAllLanguage_levelsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_LANGUAGE_LEVELS, DefaultLanguage_levels.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#Level
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#Level", Level.class, DefaultLevel.class);
    }

    /**
     * Creates an instance of type Level.  Modifies the underlying ontology.
     */
    public Level createLevel(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_LEVEL, DefaultLevel.class);
    }

    /**
     * Gets an instance of type Level with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Level getLevel(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_LEVEL, DefaultLevel.class);
    }

    /**
     * Gets all instances of Level from the ontology.
     */
    public Collection<? extends Level> getAllLevelInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_LEVEL, DefaultLevel.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#Level_A1
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#Level_A1", Level_A1.class, DefaultLevel_A1.class);
    }

    /**
     * Creates an instance of type Level_A1.  Modifies the underlying ontology.
     */
    public Level_A1 createLevel_A1(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_LEVEL_A1, DefaultLevel_A1.class);
    }

    /**
     * Gets an instance of type Level_A1 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Level_A1 getLevel_A1(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_LEVEL_A1, DefaultLevel_A1.class);
    }

    /**
     * Gets all instances of Level_A1 from the ontology.
     */
    public Collection<? extends Level_A1> getAllLevel_A1Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_LEVEL_A1, DefaultLevel_A1.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#Level_A2
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#Level_A2", Level_A2.class, DefaultLevel_A2.class);
    }

    /**
     * Creates an instance of type Level_A2.  Modifies the underlying ontology.
     */
    public Level_A2 createLevel_A2(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_LEVEL_A2, DefaultLevel_A2.class);
    }

    /**
     * Gets an instance of type Level_A2 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Level_A2 getLevel_A2(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_LEVEL_A2, DefaultLevel_A2.class);
    }

    /**
     * Gets all instances of Level_A2 from the ontology.
     */
    public Collection<? extends Level_A2> getAllLevel_A2Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_LEVEL_A2, DefaultLevel_A2.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#Level_B1
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#Level_B1", Level_B1.class, DefaultLevel_B1.class);
    }

    /**
     * Creates an instance of type Level_B1.  Modifies the underlying ontology.
     */
    public Level_B1 createLevel_B1(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_LEVEL_B1, DefaultLevel_B1.class);
    }

    /**
     * Gets an instance of type Level_B1 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Level_B1 getLevel_B1(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_LEVEL_B1, DefaultLevel_B1.class);
    }

    /**
     * Gets all instances of Level_B1 from the ontology.
     */
    public Collection<? extends Level_B1> getAllLevel_B1Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_LEVEL_B1, DefaultLevel_B1.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#Level_B2
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#Level_B2", Level_B2.class, DefaultLevel_B2.class);
    }

    /**
     * Creates an instance of type Level_B2.  Modifies the underlying ontology.
     */
    public Level_B2 createLevel_B2(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_LEVEL_B2, DefaultLevel_B2.class);
    }

    /**
     * Gets an instance of type Level_B2 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Level_B2 getLevel_B2(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_LEVEL_B2, DefaultLevel_B2.class);
    }

    /**
     * Gets all instances of Level_B2 from the ontology.
     */
    public Collection<? extends Level_B2> getAllLevel_B2Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_LEVEL_B2, DefaultLevel_B2.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#Level_C1
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#Level_C1", Level_C1.class, DefaultLevel_C1.class);
    }

    /**
     * Creates an instance of type Level_C1.  Modifies the underlying ontology.
     */
    public Level_C1 createLevel_C1(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_LEVEL_C1, DefaultLevel_C1.class);
    }

    /**
     * Gets an instance of type Level_C1 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Level_C1 getLevel_C1(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_LEVEL_C1, DefaultLevel_C1.class);
    }

    /**
     * Gets all instances of Level_C1 from the ontology.
     */
    public Collection<? extends Level_C1> getAllLevel_C1Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_LEVEL_C1, DefaultLevel_C1.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#Level_C2
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#Level_C2", Level_C2.class, DefaultLevel_C2.class);
    }

    /**
     * Creates an instance of type Level_C2.  Modifies the underlying ontology.
     */
    public Level_C2 createLevel_C2(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_LEVEL_C2, DefaultLevel_C2.class);
    }

    /**
     * Gets an instance of type Level_C2 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Level_C2 getLevel_C2(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_LEVEL_C2, DefaultLevel_C2.class);
    }

    /**
     * Gets all instances of Level_C2 from the ontology.
     */
    public Collection<? extends Level_C2> getAllLevel_C2Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_LEVEL_C2, DefaultLevel_C2.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#Skills
     */

    {
        javaMapping.add("http://www.semanticweb.org/katherina/ontologies/2020/9/untitled-ontology-9#Skills", Skills.class, DefaultSkills.class);
    }

    /**
     * Creates an instance of type Skills.  Modifies the underlying ontology.
     */
    public Skills createSkills(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SKILLS, DefaultSkills.class);
    }

    /**
     * Gets an instance of type Skills with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Skills getSkills(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SKILLS, DefaultSkills.class);
    }

    /**
     * Gets all instances of Skills from the ontology.
     */
    public Collection<? extends Skills> getAllSkillsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SKILLS, DefaultSkills.class);
    }


}
